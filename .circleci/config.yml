# Visual Composer Website Builder circleci config file

version: 2
jobs:
  codestyle-js:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: yarn install --frozen-lockfile && yarn standard
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
  codestyle-php-plugin-file:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - run: php ci/phpcs.phar --standard=ci/ruleset.xml plugin-wordpress.php
  codestyle-php-bootstrap:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - run: php ci/phpcs.phar --standard=ci/ruleset.xml plugin-wordpress.php
  codestyle-php-framework:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - run: php ci/phpcs.phar --standard=ci/ruleset.xml plugin-wordpress.php
  codestyle-php-helpers:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - run: php ci/phpcs.phar --standard=ci/ruleset.xml visualcomposer/Helpers
  codestyle-php-modules:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - run: php ci/phpcs.phar --standard=ci/ruleset.xml visualcomposer/Modules
  codestyle-php-application:
    docker:
      - image: wpbakery/vc-hub-docker
    steps:
      - checkout
      - run: php ci/phpcs.phar --standard=ci/ruleset.xml visualcomposer/Application.php visualcomposer/Requirements.php
  test-php:
    docker:
      - image: visualcomposer/ci-wordpress:circleci-php-apache-chrome
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: test
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          WP_TESTS_DIR: /opt/wp-tests
          WP_TESTS_DOMAIN: localhost
          WP_TESTS_ABSPATH: /var/www/html/
      - image: mariadb:10.3.13-bionic
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    steps:
      - checkout
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 10s
      - run:
          name: Setup mysql and apache2
          command: |
            mysql -h 127.0.0.1 --user="root" --execute="CREATE DATABASE test;"
            mysql -h 127.0.0.1 --user="root" --execute="CREATE USER 'wpuser'@'127.0.0.1'; GRANT ALL PRIVILEGES ON test.* TO 'wpuser'@'127.0.0.1';"
            sudo apachectl start
      - run:
          name: Install Wordpress
          command: |
            wp core config --path=/var/www/html --dbhost=127.0.0.1 --dbname=$MYSQL_DB --dbuser=wpuser --allow-root
            wp core install --url=http://localhost --title=Test --admin_user=admin --admin_password=12345 --admin_email=test@test.com --path=/var/www/html --allow-root --debug
            sudo chmod 777 /var/www/html/wp-content/uploads
      - run: php ci/composer.phar install
      - run: php tools/php-composer/cli.php
      - run: php ci/phpunit-8.0.0.phar --configuration=ci/phpunit-all-coverage.xml
      - run: php ci/coverage-test.php
  end-2-end-tests:
    docker:
      - image: visualcomposer/ci-wordpress:circleci-php-apache-chrome
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: mate
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          WP_TESTS_DIR: /opt/wp-tests
          WP_TESTS_DOMAIN: localhost
          WP_TESTS_ABSPATH: /var/www/html/
      - image: mariadb:10.3.13-bionic
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    steps:
      - checkout
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Setup mysql and apache2
          command: |
            mysql -h 127.0.0.1 --user="root" --execute="CREATE DATABASE test;"
            mysql -h 127.0.0.1 --user="root" --execute="CREATE USER 'wpuser'@'127.0.0.1'; GRANT ALL PRIVILEGES ON test.* TO 'wpuser'@'127.0.0.1';"
            sudo apachectl start
      - run:
          name: Install Wordpress
          command: |
            wp core config --path=/var/www/html --dbhost=127.0.0.1 --dbname=test --dbuser=wpuser --allow-root
            wp core install --url=http://localhost --title=Test --admin_user=admin --admin_password=12345 --admin_email=test@test.com --path=/var/www/html --allow-root --debug
            sudo chmod 777 /var/www/html/wp-content/uploads
      - run: php ci/composer.phar install
      - run:
          name: Link files and directories
          command: |
            echo "<?php VcvEnv::set('VCV_ENV_DEV_ELEMENTS', true); VcvEnv::set('VCV_ENV_DEV_ADDONS', true); VcvEnv::set('VCV_ENV_EXTENSION_DOWNLOAD', false); require_once(__DIR__ . '/env.php');" > env-dev.php
            ln -s $(pwd) /var/www/html/wp-content/plugins/builder
            chmod 777 /var/www/html/wp-content/uploads
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Yarn install
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build project
          command: |
            yarn build
            yarn build-settings
            bash tools/elements/buildScript.sh
      - run: yarn run cypress run --project ./tests/
workflows:
  version: 2
  codestyle:
    jobs:
      - codestyle-js
      - codestyle-php-plugin-file
      - codestyle-php-bootstrap
      - codestyle-php-framework
      - codestyle-php-helpers
      - codestyle-php-modules
      - codestyle-php-application
  tests:
    jobs:
      - test-php
      - end-2-end-tests

