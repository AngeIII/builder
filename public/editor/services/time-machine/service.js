var vcCake = require('vc-cake');var TimeMachine = {  stack: [],  stackPosition: 0,  add: function(data) {    if (this.can('redo')) {      this.stack = this.stack.slice(this.stackPosition - this.stack.length);    }    this.stack.push(data);    this.stackPosition = this.stack.length;  },  can: function(what) {    var result = false;    if ('undo' === what) {      result = this.stack.length > 0 && this.stackPosition > 0;    } else if ('redo' === what) {      result = this.stack.length > 0 && this.stackPosition < this.stack.length;    }    return result;  },  undo: function() {    if (this.can('undo')) {      this.stackPosition-=1;    }  },  redo: function() {    if (this.can('redo')) {      this.stackPosition+=1;    }  },  set: function(index) {    if (this.stackPosition < index) {      this.stack = this.stack.slice(index - this.stackPosition);      return true;    }    return false;  },  get: function() {    return this.stack[this.stackPosition - 1];  }};var Module = module.exports = {  add: function(document) {    TimeMachine.add(document);  },  getCurrentPosition: function() {    return TimeMachine.stackPosition;  },  undo: function() {    TimeMachine.undo();    return this.get();  },  redo: function() {    TimeMachine.redo();    return this.get();  },  get: function() {    return TimeMachine.get();  },  canUndo: function() {    return TimeMachine.can('undo');  },  canRedo: function() {    return TimeMachine.can('redo');  },  stack: function() {    return TimeMachine.stack;  }};vcCake.addService('time-machine', Module);