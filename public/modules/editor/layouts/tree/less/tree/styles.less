
//== Tree Layout styles styles
.vc-ui-tree-layout-container {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}

.vc-ui-tree-layout{
  flex-grow: 1;
  flex-shrink: 1;
  overflow: auto;
  margin: 0;
  padding: 0;
  list-style: none;
}


// Actions
.vc-ui-tree-layout-actions{
  flex-grow: 0;
  flex-shrink: 0;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.vc-ui-tree-layout-action {
  display: inline-flex;
  vertical-align: middle;
  color: @text-color-base;
  text-decoration: none;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  padding: @gold-value;
  text-align: center;
  cursor: pointer;
  transition: all @vc-ui-transition-duration @vc-ui-transition-timing-function;
  flex-grow: 1;
  flex-shrink: 1;

  margin-left: -1px;
  border-width: 1px 0 0 1px;
  border-style: solid;
  border-color: @delimiter-color;

  &:hover {
    background-color: @bg-base-hover;
  }
  &[disabled] {
    background-color: transparent;
    opacity: .5;
    cursor: not-allowed;
  }
}

.vc-ui-tree-layout-action-content {

}

.vc-ui-tree-layout-action-icon {
  font-size: 1em;
  height: 1em;
  width: 1.25em;
  display: inline-block;
  vertical-align: middle;
  position: relative;
  &::before {
    font-size: 1.25em;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

//== Controls
.vc-ui-tree-layout-control {
  border-bottom: 1px solid @delimiter-color;
  transition: background-color @vc-ui-transition-duration @vc-ui-transition-timing-function;
  padding: @gold-value / 2 0;
  min-height: @control-height;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  position: relative;
  &:hover {
    background-color: @bg-base-hover;
  }
}
.vc-ui-tree-layout-control-content {
  white-space: nowrap;
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  > * {
    flex-grow: 0;
    flex-shrink: 0;
    min-width: 0;
  }
}
.vc-ui-tree-layout-control-label {
  flex-grow: 1;
  flex-shrink: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-left: @gold-value / 2;
  padding-right: @gold-value / 2;
}
.vc-ui-tree-layout-control-icon {

}

//== control actions
.vc-ui-tree-layout-control-actions {
  opacity: 1;
  transition: opacity @vc-ui-transition-duration @vc-ui-transition-timing-function;
}
.vc-ui-tree-layout-control-action {
  position: relative;
  width: @control-height;
  height: 1em;
  display: inline-block;
  vertical-align: middle;
  color: inherit;
  cursor: pointer;
  > * {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}
.vc-ui-tree-layout-control {
  &:not(:hover) {
    .vc-ui-tree-layout-control-actions {
      opacity: 0;
    }
  }
}

//== Drag handler
.vc-ui-tree-layout-control-drag-handler {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  cursor: move;
  width: 1em;
  opacity: .2;
  user-select: none;
  transition: opacity @vc-ui-transition-duration @vc-ui-transition-timing-function;
}
.vc-ui-tree-layout-control-drag-handler-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: .9em;
}
.vc-ui-tree-layout-control {
  &:not(:hover) {
    .vc-ui-tree-layout-control-drag-handler {
      opacity: 0;
    }
  }
}

//== Layout content
.vc-ui-tree-layout-node {
  list-style: none;
  padding: 0;
  margin: 0;
}

.vc-ui-tree-layout-node-child {
  position: relative;
}


.vc_ui-tree-child-col { // temp style: todo: remove this
  position: relative;
}

// Expand
.vc-ui-tree-layout-node-expand-trigger {
  position: absolute;
  left: -1.25em;
  top: 50%;
  margin-top: -.5em;
  cursor: pointer;
}
.vc-ui-tree-layout-node-child {
  &.vc-ui-tree-layout-node-expand {
    > .vc-ui-tree-layout-control {
      > .vc-ui-tree-layout-control-content {
        > .vc-ui-tree-layout-node-expand-trigger {
          transform+: rotate(-90deg);
        }
      }
    }
  }
  &:not(.vc-ui-tree-layout-node-expand){
    > .vc-ui-tree-layout-node {
      display: none;
    }
  }
}

//== control states
.vc-ui-tree-layout-node-state-draft {
    &.vc-ui-tree-layout-node-child {
      opacity: .6;
    }
}