.vce-row {
  display: flex;
  flex-direction: column;
  margin-left:  -(@gutter / 2);
  margin-right:  -(@gutter / 2);
}

.vce-row-full-height {
  min-height: 100vh;
}

.vce-row-content {
  flex: 1 1 auto;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start;
  align-content: flex-start;
  min-height: 1em;
}

.vce-row-equal-height {
  align-items: stretch;

  &:after {
    content: "";
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden;
    display: block;
  }
}

.vce-row[data-vce-full-width="true"] {
  position: relative;
  box-sizing: border-box;

  &.vce-row-no-paddings {

    > .vce-row-content > .vce-col > .vce-col-content {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

.vce-row-direction--reverse .vce-row-content{
  flex-direction: row-reverse;
}
.vce-row-wrap--reverse .vce-row-content{
  flex-wrap: wrap-reverse;
}
//== DO behaviour
@class-xs: xs;
@class-sm: sm;
@class-md: md;
@class-lg: lg;
@class-xl: xl;
.vce-row {
  &.vce-element--has-background {
    margin-left: 0;
    margin-right: 0;
    > .vce-row-content {
      > .vce-col > .vce-col-content {
        padding-top: @vcv-gold-margin;
      }
    }
  }
}
.make-color-media(@class-xs, @vcv-grid-breakpoint-xs, @vcv-grid-breakpoint-xs-max);
.make-color-media(@class-sm, @vcv-grid-breakpoint-sm, @vcv-grid-breakpoint-sm-max);
.make-color-media(@class-md, @vcv-grid-breakpoint-md, @vcv-grid-breakpoint-md-max);
.make-color-media(@class-lg, @vcv-grid-breakpoint-lg, @vcv-grid-breakpoint-lg-max);
.make-color-media(@class-xl, @vcv-grid-breakpoint-xl);