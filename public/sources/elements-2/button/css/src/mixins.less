// Mixins for Text Separator
//-----------------------------------------
// Note: All mixins must be scoped with namespace.
// In this example namespace is #vce-text-separator
// All mixins in this file will be available in VC Design options,
// so try to make them as flexible and easy to use as possible.

#vce-button {

  //button sizing
  .size(@padding-vertical; @padding-horizontal; @font-size;) {
    font-size: @font-size;
    padding: @padding-vertical @padding-horizontal;
  }

  .color(@text-color: false; @text-color-hover: false; @background-color: false; @background-color-hover: false; @border-color: false; @border-color-hover: false;) {

      & when not (@text-color = false) {
        color: @text-color;
      }

      & when not (@text-color-hover = false) {
          .vce-button__icon {
            color: @text-color-hover;
          }
          &:hover,
          &:focus {
            color: @text-color-hover;
            .vce-button__icon {
              color: @text-color-hover;
            }
          }
      }

      & when not (@background-color = false ) {
        background-color: @background-color;
      }

      & when not (@background-color-hover = false) {
        &:hover,
        &:focus {
          background-color: @background-color-hover;
        }
      }

      & when not (@border-color = false) {
        border-color: @border-color;
      }

      & when not (@border-color-hover = false) {
        &:hover,
        &:focus {
          border-color: @border-color-hover;
        }
      }

  }


  .outline-color(@background-color; @background-color-hover; @text-color; @text-color-hover; @border-color; @border-color-hover) {

    #vce-button > .color (@text-color: @text-color;
                          @text-color-hover: @text-color-hover;);

    background-color: @background-color;

    &::before {
      #vce-button > .color (@border-color: @border-color; @border-color-hover: @border-color-hover;);
    }

    // this is the overlay color
    &::after {
      background-color: @background-color-hover;
    }
  }

  .double-line( @background-color: false;
                @background-color-hover: false;
                @text-color: false;
                @text-color-hover: false;
                @border-color: false;
                @border-color-hover: false;) {

    & when not (@background-color = false ) {
      background-color: @background-color;
    }

    & when not (@background-color-hover = false) {
      // this is the overlay color
      &::after {
        background-color: @background-color-hover;
      }
    }
    & when not (@text-color = false) {
      #vce-button > .color (@text-color: @text-color;);
    }

    & when not (@text-color-hover = false) {
      #vce-button > .color (@text-color-hover: @text-color-hover;);
    }


    & when not (@border-color = false) {
      border-color: @border-color;
      &::before {
        #vce-button > .color (@border-color: @border-color;);
      }
    }

    & when not (@border-color-hover = false) {
      border-color: @border-color;
      &::before {
        #vce-button > .color (@border-color-hover: @border-color-hover;);
      }
    }

  }
}

