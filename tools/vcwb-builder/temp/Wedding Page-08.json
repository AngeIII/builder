{
  "id": "TP11000008",
  "title": "Wedding Page",
  "description": "An ideal one-page layout for your wedding or other events, including meetups and networking parties.",
  "template": {
    "75088280": {
      "tag": "column",
      "parent": "33e3e974",
      "size": "16.66%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "75088280",
      "order": 2
    },
    "81522813": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(218, 218, 218)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "4f2095fb",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "See You Soon ...",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Playfair Display",
        "fontStyle": {
          "weight": "400",
          "style": "italic"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "32",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "81522813",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h3"
    },
    "361a820c": {
      "tag": "column",
      "parent": "be48a45f",
      "size": "66.66%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "361a820c",
      "order": 1
    },
    "36c384e9": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "round",
      "alignment": "center",
      "color": "rgb(198, 198, 198)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "8e078bc3",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 6,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(255, 130, 123)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(198, 198, 198)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "36c384e9",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Read More"
    },
    "55d6242a": {
      "size": "66.66%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "backgroundColor": "rgba(189, 37, 37, 0.5)",
            "boxModel": {
              "combined": false,
              "paddingTop": "50px",
              "paddingBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "50px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          },
          "backgroundColorMixin:all": {
            "src": "@if $backgroundColor != false {\n  #$selector[data-vce-do-apply*=\"all\"],\n  #$selector [data-vce-do-apply*=\"all\"],\n  #$selector[data-vce-do-apply*=\"background\"],\n  #$selector [data-vce-do-apply*=\"background\"] {\n    &[data-vce-do-apply*=\"$selector\"] {\n      @media (--$(device)-only) {\n        background-color: $backgroundColor;\n      }\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "backgroundColor": {
                "value": "rgba(189, 37, 37, 0.5)"
              }
            }
          }
        }
      },
      "firstInRow": false,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "33e3e974",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "55d6242a",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "4496923b": {
      "tag": "column",
      "parent": "cd8c3c88",
      "size": "25%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "4496923b",
      "order": 2
    },
    "0367edce": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "361a820c",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "We're Getting Married",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Playfair Display",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "46",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "0367edce",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h2"
    },
    "a09bfcd5": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\">Family honor is an abstract concept involving the perceived quality of worthiness and respectability that affects the social standing and the self-evaluation of a group of related people, both corporately and individually. The family is viewed as the main source of honor and the community highly values the relationship between honor and the family.</p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "361a820c",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 6,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "a09bfcd5",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "0f742e55": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingBottom": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "100px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 7,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "0f742e55",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "eacb0803": {
      "size": "50%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "backgroundColor": "rgba(189, 37, 37, 0.5)",
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          },
          "backgroundColorMixin:all": {
            "src": "@if $backgroundColor != false {\n  #$selector[data-vce-do-apply*=\"all\"],\n  #$selector [data-vce-do-apply*=\"all\"],\n  #$selector[data-vce-do-apply*=\"background\"],\n  #$selector [data-vce-do-apply*=\"background\"] {\n    &[data-vce-do-apply*=\"$selector\"] {\n      @media (--$(device)-only) {\n        background-color: $backgroundColor;\n      }\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "backgroundColor": {
                "value": "rgba(189, 37, 37, 0.5)"
              }
            }
          }
        }
      },
      "firstInRow": false,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "cd8c3c88",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "eacb0803",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "a8269a26": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "55d6242a",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Just Say 'Yes'",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 7,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "26",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "a8269a26",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h3"
    },
    "4f2095fb": {
      "tag": "column",
      "parent": "0f742e55",
      "size": "66.66%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "4f2095fb",
      "order": 1
    },
    "13e483ea": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "25px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "25px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "large",
      "shape": "square",
      "alignment": "left",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "c70dc538",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "13e483ea",
      "image": {
        "ids": [
          884
        ],
        "urls": [
          {
            "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-02-150x150.jpg",
            "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-02-300x192.jpg",
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-02.jpg",
            "id": 884,
            "title": "News Featured Image",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ]
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "4d02382c": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "25px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "25px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "large",
      "shape": "square",
      "alignment": "left",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "8e078bc3",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "4d02382c",
      "image": {
        "ids": [
          878
        ],
        "urls": [
          {
            "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-03-150x150.jpg",
            "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-03-300x192.jpg",
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-03.jpg",
            "id": 878,
            "title": "News Feature Image",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "d2e0f654": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "8e078bc3",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "We Are Family",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "26",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "d2e0f654",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h3"
    },
    "f3425ae7": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "55d6242a",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "What You Should Know",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Playfair Display",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "46",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "f3425ae7",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h2"
    },
    "3e768034": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "round",
      "alignment": "center",
      "color": "rgb(198, 198, 198)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "c70dc538",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 11,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(255, 130, 123)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(198, 198, 198)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "3e768034",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Read More"
    },
    "c2c2417f": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "eacb0803",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "July 22, 2018 · Cape Elizabeth, Maine ",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 4,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "18",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "c2c2417f",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h2"
    },
    "be48a45f": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingTop": "100px",
              "paddingBottom": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "100px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 3,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "be48a45f",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "442e9e4a": {
      "size": "33.33%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "9ffcea7f",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "442e9e4a",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "3514ea9d": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "442e9e4a",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "The Life Before",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 4,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "26",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "3514ea9d",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h3"
    },
    "3e776ce3": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "100px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\"><span style=\"color: #ffffff;\">280 Ocean House Rd, Cape Elizabeth, Maine</span><br /><span style=\"color: #ffffff;\">2.00PM - 4.00PM</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "55d6242a",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 10,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "3e776ce3",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "8e078bc3": {
      "tag": "column",
      "parent": "9ffcea7f",
      "size": "33.33%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "8e078bc3",
      "order": 2
    },
    "e8f650b3": {
      "size": "16.66%",
      "designOptionsAdvanced": [],
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "33e3e974",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "e8f650b3",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "40f76537": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "eacb0803",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Abbey and Michael",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Playfair Display",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "80",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "40f76537",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h1"
    },
    "329aaf37": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(237, 237, 237)",
      "relatedTo": [
        "General"
      ],
      "width": "60",
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/thumbnail-separator.jpg",
      "parent": "361a820c",
      "editFormTab1": [
        "color",
        "alignment",
        "width",
        "metaCustomId",
        "customClass"
      ],
      "name": "Separator",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/preview-separator.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/",
      "metaBackendLabels": [
        {
          "value": [
            "color"
          ]
        }
      ],
      "order": 4,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Separators",
      "metaDescription": "Double line separator with different line length - calculated automatically. ",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "separator",
      "id": "329aaf37",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/"
    },
    "dbd43204": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "c70dc538",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Our Love Story",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 4,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "26",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "dbd43204",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h3"
    },
    "1daf80df": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "100px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\"><span style=\"color: #ffffff;\">Music, poetry, prayers or readings from religious texts or literature are also commonly incorporated into the ceremony.</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "55d6242a",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 3,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "1daf80df",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "380ee3e0": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgba(237, 237, 237, 0.25)",
      "relatedTo": [
        "General"
      ],
      "width": "60",
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/thumbnail-separator.jpg",
      "parent": "55d6242a",
      "editFormTab1": [
        "color",
        "alignment",
        "width",
        "metaCustomId",
        "customClass"
      ],
      "name": "Separator",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/preview-separator.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/",
      "metaBackendLabels": [
        {
          "value": [
            "color"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Separators",
      "metaDescription": "Double line separator with different line length - calculated automatically. ",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "separator",
      "id": "380ee3e0",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/"
    },
    "e4b1e429": {
      "size": "16.66%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "be48a45f",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "e4b1e429",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "e7a9cb6a": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "round",
      "alignment": "center",
      "color": "rgb(198, 198, 198)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "442e9e4a",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 13,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(255, 130, 123)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(198, 198, 198)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "e7a9cb6a",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Read More"
    },
    "53e71566": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingRight": "60px",
              "paddingLeft": "60px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "60px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "60px"
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "round",
      "alignment": "center",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "eacb0803",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 7,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(255, 130, 123)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "53e71566",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "RSVP"
    },
    "9ffcea7f": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingTop": "100px",
              "paddingBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {},
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 6,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "9ffcea7f",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "b555ef12": {
      "tag": "column",
      "parent": "be48a45f",
      "size": "16.66%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "b555ef12",
      "order": 2
    },
    "aaa94ce3": {
      "size": "25%",
      "designOptionsAdvanced": [],
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "cd8c3c88",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "aaa94ce3",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "68c35b91": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\"><span style=\"color: #ffffff;\">40 Bowery Beach Rd, Cape Elizabeth, Maine</span><br /><span style=\"color: #ffffff;\">6.00PM - 12.00PM</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "55d6242a",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 13,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "68c35b91",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "da9410aa": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "15px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "15px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "center",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "55d6242a",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Party at 'Inn by the Sea'",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 12,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "400",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "26",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "da9410aa",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h3"
    },
    "17930e13": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\">One of the primary functions of the family involves providing a framework for the production and reproduction of persons biologically and socially.</p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "8e078bc3",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 5,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "17930e13",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "49f45b90": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\">Diverse data from ethnography, history, law, and social statistics, reveal the human family as a social institution and not as a biological fact founded on the relationship of consanguinity.</p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "442e9e4a",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 9,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "49f45b90",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "67f8fc9a": {
      "tag": "column",
      "parent": "0f742e55",
      "size": "16.66%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "67f8fc9a",
      "order": 2
    },
    "c4b67161": {
      "size": "16.66%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "0f742e55",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "c4b67161",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "cd8c3c88": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "middle",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "gradientOverlay": true,
            "backgroundStyle": "cover",
            "gradientAngle": 45,
            "backgroundType": "imagesSimple",
            "parallaxSpeed": 10,
            "gradientStartColor": "rgba(138, 33, 28, 0.4)",
            "parallax": "simple",
            "images": {
              "ids": [
                795
              ],
              "urls": [
                {
                  "alt": "",
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/couple-hero-image-150x150.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/couple-hero-image.jpg",
                  "medium_large": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/couple-hero-image-768x512.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/couple-hero-image-300x200.jpg",
                  "title": "Wedding Couple",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  },
                  "id": 795,
                  "large": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/couple-hero-image-1024x683.jpg"
                }
              ],
              "draggingIndex": null
            },
            "gradientEndColor": "rgba(23, 73, 119, 0.4)",
            "boxModel": {
              "combined": false,
              "paddingTop": "200px",
              "paddingBottom": "200px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "200px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "200px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          },
          "gradientMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"gradient\"],\n#$selector [data-vce-do-apply*=\"gradient\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      background-image: linear-gradient($(angle)deg, $endColor, $startColor);\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "startColor": {
                "value": "rgba(138, 33, 28, 0.4)"
              },
              "endColor": {
                "value": "rgba(23, 73, 119, 0.4)"
              },
              "angle": {
                "value": 45
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "stretchedRow",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "cd8c3c88",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "middle"
    },
    "dfbb8146": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "25px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "25px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "large",
      "shape": "square",
      "alignment": "left",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "442e9e4a",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "dfbb8146",
      "image": {
        "ids": [
          880
        ],
        "urls": [
          {
            "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-01-150x150.jpg",
            "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-01-300x192.jpg",
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/news-feature-01.jpg",
            "id": 880,
            "title": "News Feature Image",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "5de896cb": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<p style=\"text-align: center;\">Christopher Harris notes that the western conception of family is ambiguous, and confused with the household, as revealed in the different contexts in which the word is used.</p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "c70dc538",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 9,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "5de896cb",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "33e3e974": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "gradientOverlay": true,
            "backgroundStyle": "cover",
            "gradientAngle": 45,
            "backgroundType": "imagesSimple",
            "parallaxSpeed": 10,
            "gradientStartColor": "rgba(138, 33, 28, 0.4)",
            "parallax": "simple",
            "images": {
              "ids": [
                883
              ],
              "urls": [
                {
                  "alt": "",
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/agenda-background-150x150.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/agenda-background.jpg",
                  "medium_large": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/agenda-background-768x512.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/agenda-background-300x200.jpg",
                  "title": "Agenda Background",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  },
                  "id": 883,
                  "large": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/agenda-background-1024x683.jpg"
                }
              ]
            },
            "gradientEndColor": "rgba(23, 73, 119, 0.4)",
            "boxModel": {
              "combined": false,
              "paddingTop": "100px",
              "paddingBottom": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "100px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          },
          "gradientMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"gradient\"],\n#$selector [data-vce-do-apply*=\"gradient\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      background-image: linear-gradient($(angle)deg, $endColor, $startColor);\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "startColor": {
                "value": "rgba(138, 33, 28, 0.4)"
              },
              "endColor": {
                "value": "rgba(23, 73, 119, 0.4)"
              },
              "angle": {
                "value": 45
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "stretchedRow",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 5,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "33e3e974",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "middle"
    },
    "c70dc538": {
      "tag": "column",
      "parent": "9ffcea7f",
      "size": "33.33%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "c70dc538",
      "order": 1
    }
  }
}