{
  "id": "TP11000004",
  "title": "Startup Page",
  "description": "Full startup page with hero images and feature list to present your products and services.",
  "template": {
    "b6224a99": {
      "size": "auto",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "4b384d3a",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "b6224a99",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "0a6fae41": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "middle",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "backgroundColor": "rgb(243, 226, 229)"
          }
        },
        "attributeMixins": {
          "backgroundColorMixin:all": {
            "src": "@if $backgroundColor != false {\n  #$selector[data-vce-do-apply*=\"all\"],\n  #$selector [data-vce-do-apply*=\"all\"],\n  #$selector[data-vce-do-apply*=\"background\"],\n  #$selector [data-vce-do-apply*=\"background\"] {\n    &[data-vce-do-apply*=\"$selector\"] {\n      @media (--$(device)-only) {\n        background-color: $backgroundColor;\n      }\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "backgroundColor": {
                "value": "rgb(243, 226, 229)"
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "stretchedRow",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": true,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "0a6fae41",
      "equalHeight": true,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "middle"
    },
    "251daae2": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "middle",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "backgroundColor": "rgb(243, 226, 229)",
            "boxModel": {
              "paddingTop": "100px",
              "paddingBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          },
          "backgroundColorMixin:all": {
            "src": "@if $backgroundColor != false {\n  #$selector[data-vce-do-apply*=\"all\"],\n  #$selector [data-vce-do-apply*=\"all\"],\n  #$selector[data-vce-do-apply*=\"background\"],\n  #$selector [data-vce-do-apply*=\"background\"] {\n    &[data-vce-do-apply*=\"$selector\"] {\n      @media (--$(device)-only) {\n        background-color: $backgroundColor;\n      }\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "backgroundColor": {
                "value": "rgb(243, 226, 229)"
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "stretchedRow",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 8,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": true,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "251daae2",
      "equalHeight": true,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "middle"
    },
    "b23397a6": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "db1608de",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "b23397a6",
      "image": {
        "ids": [
          707
        ],
        "urls": [
          {
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Logotype-05.png",
            "id": 707,
            "title": "Logotype-05",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "4524d01f": {
      "designOptions": {},
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "e32afdf5",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "4524d01f",
      "image": {
        "ids": [
          719
        ],
        "urls": [
          {
            "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Application-01-150x150.png",
            "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Application-01-162x300.png",
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Application-01.png",
            "id": 719,
            "title": "Application Screen Main",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ]
      },
      "clickableOptions": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "a7eed112": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "paddingTop": "50px",
              "paddingBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "50px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {},
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 5,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "a7eed112",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "80b6da83": {
      "size": "50%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "0a6fae41",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "80b6da83",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "ca765a63": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "1e677465",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "ca765a63",
      "image": {
        "ids": [
          708
        ],
        "urls": [
          {
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Logotype-06.png",
            "id": 708,
            "title": "Logotype-06",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "deed4935": {
      "tag": "column",
      "parent": "e68a87fa",
      "size": "16.66%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "deed4935",
      "order": 5
    },
    "9c92df69": {
      "tag": "column",
      "parent": "a7eed112",
      "size": "25%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "9c92df69",
      "order": 1
    },
    "02a2bdd8": {
      "designOptions": {},
      "output": "<p style=\"text-align: center;\">Ecology is not synonymous with environment, environmentalism, natural history, or environmental science. It is closely related to evolutionary biology, genetics, and ethology. An important focus for ecologists is to improve the understanding of how biodiversity affects ecological function.</p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "93cd4d08",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 3,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "02a2bdd8",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "e32afdf5": {
      "tag": "column",
      "parent": "0a6fae41",
      "size": "50%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "e32afdf5",
      "order": 1
    },
    "99ec667d": {
      "designOptions": {
        "device": {},
        "attributeMixins": {}
      },
      "alignment": "center",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "93cd4d08",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "What is Go Instagreen",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "700",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "60",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "99ec667d",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h2"
    },
    "94e4ccbd": {
      "designOptions": {},
      "shape": "round",
      "alignment": "left",
      "color": "#fff",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "hoverColor": "#fff",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/thumbnail-basic-button.png",
      "parent": "9d9d3654",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "color",
        "background",
        "toggleCustomHover",
        "hoverColor",
        "hoverBackground",
        "metaCustomId",
        "customClass"
      ],
      "hoverBackground": "#4d70ac",
      "name": "Basic Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/preview-basic-button.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/",
      "background": "rgb(0, 175, 236)",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "background",
            "shape"
          ]
        }
      ],
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "toggleCustomHover": false,
      "metaDescription": "Basic flat style button with hover effect to catch visitor's attention.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "basicButton",
      "id": "94e4ccbd",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Subscribe Now"
    },
    "db1608de": {
      "size": "16.66%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "e68a87fa",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "db1608de",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "7b3741aa": {
      "designOptions": {},
      "align": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/thumbnail-feature.jpg",
      "parent": "aa854420",
      "editFormTab1": [
        "description",
        "align",
        "metaCustomId",
        "customClass"
      ],
      "name": "Feature",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/preview-feature.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/",
      "metaBackendLabels": [
        {
          "value": [
            "icon"
          ]
        },
        {
          "value": [
            "description"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "icon",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Feature element with an icon, title and description. Icon element contains controls for various background shapes.",
      "assetsLibrary": [
        "animate"
      ],
      "icon": {
        "designOptions": {},
        "size": "small",
        "shape": "filled-circle",
        "shapeColor": "rgb(0, 175, 236)",
        "relatedTo": [
          "General"
        ],
        "customClass": "",
        "iconPicker": {
          "icon": "typcn typcn-globe-outline",
          "iconSet": "typicons"
        },
        "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/thumbnail-icon.jpg",
        "parent": false,
        "iconAlignment": "center",
        "editFormTab1": [
          "iconPicker",
          "iconColor",
          "iconUrl",
          "size",
          "shape",
          "shapeColor",
          "iconAlignment",
          "toggleCustomHover",
          "iconColorHover",
          "shapeColorHover",
          "metaCustomId",
          "customClass"
        ],
        "iconColor": "#fff",
        "name": "Icon",
        "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/preview-icon.jpg",
        "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/public/dist/element.bundle.js",
        "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/",
        "metaBackendLabels": [
          {
            "value": [
              "iconPicker",
              "iconUrl",
              "shape",
              "shapeColor"
            ],
            "options": {
              "onChange": [
                {
                  "rule": {
                    "attribute": "shape",
                    "value": "none"
                  },
                  "dependency": "shapeColor",
                  "action": "toggle"
                }
              ]
            }
          }
        ],
        "metaEditFormTabs": [
          "editFormTab1",
          "designOptions"
        ],
        "metaCustomId": "",
        "iconColorHover": "#fff",
        "iconUrl": {
          "url": "",
          "title": "",
          "targetBlank": false,
          "relNofollow": false
        },
        "toggleCustomHover": false,
        "metaDescription": "Simple icon element with various icons from library and background shape control options.",
        "assetsLibrary": [
          "iconpicker",
          "animate"
        ],
        "shapeColorHover": "#3cb878",
        "tag": "icon",
        "id": "c82f6b13",
        "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/"
      },
      "tag": "feature",
      "id": "7b3741aa",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/",
      "description": "<p>Delivery is the process of transporting goods from a source location to a predefined destination.</p>"
    },
    "2ffc8147": {
      "designOptions": {},
      "shape": "round",
      "alignment": "left",
      "color": "#fff",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "hoverColor": "#fff",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/thumbnail-basic-button.png",
      "parent": "b2694a42",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "color",
        "background",
        "toggleCustomHover",
        "hoverColor",
        "hoverBackground",
        "metaCustomId",
        "customClass"
      ],
      "hoverBackground": "#4d70ac",
      "name": "Basic Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/preview-basic-button.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/",
      "background": "rgb(0, 175, 236)",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "background",
            "shape"
          ]
        }
      ],
      "order": 6,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "toggleCustomHover": false,
      "metaDescription": "Basic flat style button with hover effect to catch visitor's attention.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "basicButton",
      "id": "2ffc8147",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Subscribe Now"
    },
    "6ed5dc3b": {
      "tag": "column",
      "parent": "a7eed112",
      "size": "25%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "6ed5dc3b",
      "order": 2
    },
    "efd21aa0": {
      "designOptions": {},
      "shape": "round",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "d1a87a8f",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(0, 175, 236)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "efd21aa0",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Apply for Demo"
    },
    "d1220ec1": {
      "designOptions": {},
      "shape": "round",
      "alignment": "center",
      "color": "#fff",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "hoverColor": "#fff",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/thumbnail-basic-button.png",
      "parent": "93cd4d08",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "color",
        "background",
        "toggleCustomHover",
        "hoverColor",
        "hoverBackground",
        "metaCustomId",
        "customClass"
      ],
      "hoverBackground": "#4d70ac",
      "name": "Basic Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/preview-basic-button.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/public/",
      "background": "rgb(0, 175, 236)",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "background",
            "shape"
          ]
        }
      ],
      "order": 5,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "toggleCustomHover": false,
      "metaDescription": "Basic flat style button with hover effect to catch visitor's attention.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "basicButton",
      "id": "d1220ec1",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/basicButton/basicButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Subscribe Now"
    },
    "0cad8dc1": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "left",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "b2694a42",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "How to Instashop.",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 0,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "700",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "60",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "0cad8dc1",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h2"
    },
    "cac459da": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "c82ce49b",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "cac459da",
      "image": {
        "ids": [
          703
        ],
        "urls": [
          {
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Logotype-01.png",
            "id": 703,
            "title": "Logotype-01",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "4b384d3a": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {},
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {},
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 6,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "4b384d3a",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "1e677465": {
      "tag": "column",
      "parent": "e68a87fa",
      "size": "16.66%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "1e677465",
      "order": 4
    },
    "93cd4d08": {
      "size": "auto",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "c44091a0",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "93cd4d08",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "210e97cd": {
      "designOptions": {},
      "align": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/thumbnail-feature.jpg",
      "parent": "9c92df69",
      "editFormTab1": [
        "description",
        "align",
        "metaCustomId",
        "customClass"
      ],
      "name": "Feature",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/preview-feature.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/",
      "metaBackendLabels": [
        {
          "value": [
            "icon"
          ]
        },
        {
          "value": [
            "description"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "icon",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Feature element with an icon, title and description. Icon element contains controls for various background shapes.",
      "assetsLibrary": [
        "animate"
      ],
      "icon": {
        "designOptions": {},
        "size": "small",
        "shape": "filled-circle",
        "shapeColor": "rgb(0, 175, 236)",
        "relatedTo": [
          "General"
        ],
        "customClass": "",
        "iconPicker": {
          "icon": "typcn typcn-leaf",
          "iconSet": "typicons"
        },
        "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/thumbnail-icon.jpg",
        "parent": false,
        "iconAlignment": "center",
        "editFormTab1": [
          "iconPicker",
          "iconColor",
          "iconUrl",
          "size",
          "shape",
          "shapeColor",
          "iconAlignment",
          "toggleCustomHover",
          "iconColorHover",
          "shapeColorHover",
          "metaCustomId",
          "customClass"
        ],
        "iconColor": "#fff",
        "name": "Icon",
        "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/preview-icon.jpg",
        "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/public/dist/element.bundle.js",
        "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/",
        "metaBackendLabels": [
          {
            "value": [
              "iconPicker",
              "iconUrl",
              "shape",
              "shapeColor"
            ],
            "options": {
              "onChange": [
                {
                  "rule": {
                    "attribute": "shape",
                    "value": "none"
                  },
                  "dependency": "shapeColor",
                  "action": "toggle"
                }
              ]
            }
          }
        ],
        "metaEditFormTabs": [
          "editFormTab1",
          "designOptions"
        ],
        "metaCustomId": "",
        "iconColorHover": "#fff",
        "iconUrl": {
          "url": "",
          "title": "",
          "targetBlank": false,
          "relNofollow": false
        },
        "toggleCustomHover": false,
        "metaDescription": "Simple icon element with various icons from library and background shape control options.",
        "assetsLibrary": [
          "iconpicker",
          "animate"
        ],
        "shapeColorHover": "#3cb878",
        "tag": "icon",
        "id": "c82f6b13",
        "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/"
      },
      "tag": "feature",
      "id": "210e97cd",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/",
      "description": "<p>Ecology is not synonymous with environment, environmentalism, or natural history.</p>"
    },
    "d12702cc": {
      "size": "50%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "251daae2",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "d12702cc",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "1cf5d337": {
      "size": "25%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "a7eed112",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "1cf5d337",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "c44091a0": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "paddingTop": "50px",
              "paddingBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "50px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {},
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 7,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "c44091a0",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "e68a87fa": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {},
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": "c68fb666",
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "e68a87fa",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "c68fb666": {
      "size": "100%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "a124768f",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "c68fb666",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "855736c7": {
      "designOptions": {},
      "alignment": "left",
      "color": "rgb(0, 175, 236)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "b2694a42",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Learn More.",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 1,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "700",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "60",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "855736c7",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h2"
    },
    "23f5c7a3": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "alignment": "left",
      "color": "",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "80b6da83",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Deliver plants to your workspace.",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 4,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "700",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "60",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "23f5c7a3",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h1"
    },
    "67b65d3e": {
      "tag": "column",
      "parent": "e68a87fa",
      "size": "16.66%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "67b65d3e",
      "order": 3
    },
    "040640f6": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "67b65d3e",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "040640f6",
      "image": {
        "ids": [
          706
        ],
        "urls": [
          {
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Logotype-04.png",
            "id": 706,
            "title": "Logotype-04",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "c9d68e46": {
      "designOptions": {},
      "output": "<p style=\"text-align: left;\">There are many practical applications of ecology in conservation biology, wetland management, natural resource management.</p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "b2694a42",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "c9d68e46",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "505ad895": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "deed4935",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "505ad895",
      "image": {
        "ids": [
          705
        ],
        "urls": [
          {
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Logotype-03.png",
            "id": 705,
            "title": "Logotype-03",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "9d9d3654": {
      "size": "49.99%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "5fd03065",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "9d9d3654",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "5ac7cfd9": {
      "designOptions": {},
      "align": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/thumbnail-feature.jpg",
      "parent": "1cf5d337",
      "editFormTab1": [
        "description",
        "align",
        "metaCustomId",
        "customClass"
      ],
      "name": "Feature",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/preview-feature.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/",
      "metaBackendLabels": [
        {
          "value": [
            "icon"
          ]
        },
        {
          "value": [
            "description"
          ]
        }
      ],
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "icon",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Feature element with an icon, title and description. Icon element contains controls for various background shapes.",
      "assetsLibrary": [
        "animate"
      ],
      "icon": {
        "designOptions": {},
        "size": "small",
        "shape": "filled-circle",
        "shapeColor": "rgb(0, 175, 236)",
        "relatedTo": [
          "General"
        ],
        "customClass": "",
        "iconPicker": {
          "icon": "typcn typcn-shopping-cart",
          "iconSet": "typicons"
        },
        "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/thumbnail-icon.jpg",
        "parent": false,
        "iconAlignment": "center",
        "editFormTab1": [
          "iconPicker",
          "iconColor",
          "iconUrl",
          "size",
          "shape",
          "shapeColor",
          "iconAlignment",
          "toggleCustomHover",
          "iconColorHover",
          "shapeColorHover",
          "metaCustomId",
          "customClass"
        ],
        "iconColor": "#fff",
        "name": "Icon",
        "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/preview-icon.jpg",
        "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/public/dist/element.bundle.js",
        "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/",
        "metaBackendLabels": [
          {
            "value": [
              "iconPicker",
              "iconUrl",
              "shape",
              "shapeColor"
            ],
            "options": {
              "onChange": [
                {
                  "rule": {
                    "attribute": "shape",
                    "value": "none"
                  },
                  "dependency": "shapeColor",
                  "action": "toggle"
                }
              ]
            }
          }
        ],
        "metaEditFormTabs": [
          "editFormTab1",
          "designOptions"
        ],
        "metaCustomId": "",
        "iconColorHover": "#fff",
        "iconUrl": {
          "url": "",
          "title": "",
          "targetBlank": false,
          "relNofollow": false
        },
        "toggleCustomHover": false,
        "metaDescription": "Simple icon element with various icons from library and background shape control options.",
        "assetsLibrary": [
          "iconpicker",
          "animate"
        ],
        "shapeColorHover": "#3cb878",
        "tag": "icon",
        "id": "c82f6b13",
        "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/"
      },
      "tag": "feature",
      "id": "5ac7cfd9",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/",
      "description": "<p>E-commerce helps create new job opportunities due to information related services, software app and digital products.</p>"
    },
    "5fd03065": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {},
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": "80b6da83",
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 7,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "5fd03065",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "9a75d843": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h4><span style=\"color: #ffffff;\">Instagreen Media</span></h4>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "c68fb666",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "9a75d843",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "cf7c934e": {
      "designOptions": {},
      "alignment": "left",
      "color": "rgb(0, 175, 236)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-thumbnail.png",
      "parent": "80b6da83",
      "editFormTab1": [
        "text",
        "font",
        "elementTag",
        "color",
        "fontSize",
        "alignment",
        "lineHeight",
        "link",
        "metaCustomId",
        "customClass"
      ],
      "name": "Google Fonts Heading",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/google-fonts-preview.png",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/public/dist/element.bundle.js",
      "text": "Go Instagreen.",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/public/",
      "metaBackendLabels": [
        {
          "value": [
            "font"
          ]
        },
        {
          "value": [
            "text"
          ]
        }
      ],
      "order": 6,
      "font": {
        "fontFamily": "Montserrat",
        "fontStyle": {
          "weight": "700",
          "style": "regular"
        },
        "status": "active",
        "fontText": "The sky was cloudless and of a deep dark blue."
      },
      "fontSize": "60",
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Selected Google Fonts with additional styling allows adding eye-catching titles and call to action messages.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "googleFontsHeading",
      "link": {
        "url": "",
        "title": "",
        "targetBlank": true,
        "relNofollow": false
      },
      "id": "cf7c934e",
      "lineHeight": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/googleFontsHeading/googleFontsHeading/",
      "elementTag": "h1"
    },
    "bad0477d": {
      "designOptions": {},
      "alignment": "center",
      "color": "rgb(237, 237, 237)",
      "relatedTo": [
        "General"
      ],
      "width": "80",
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/thumbnail-separator.jpg",
      "parent": "b6224a99",
      "editFormTab1": [
        "color",
        "alignment",
        "width",
        "metaCustomId",
        "customClass"
      ],
      "name": "Separator",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/preview-separator.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/public/",
      "metaBackendLabels": [
        {
          "value": [
            "color"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Separators",
      "metaDescription": "Double line separator with different line length - calculated automatically. ",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "separator",
      "id": "bad0477d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/separator/separator/"
    },
    "aa854420": {
      "tag": "column",
      "parent": "a7eed112",
      "size": "25%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "aa854420",
      "order": 3
    },
    "33ccd69b": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "marginBottom": "0"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "8df2627a",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "33ccd69b",
      "image": {
        "ids": [
          704
        ],
        "urls": [
          {
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Logotype-02.png",
            "id": 704,
            "title": "Logotype-02",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ],
        "draggingIndex": null
      },
      "clickableOptions": "url",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "620ab001": {
      "designOptions": {},
      "align": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/thumbnail-feature.jpg",
      "parent": "6ed5dc3b",
      "editFormTab1": [
        "description",
        "align",
        "metaCustomId",
        "customClass"
      ],
      "name": "Feature",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/preview-feature.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/public/",
      "metaBackendLabels": [
        {
          "value": [
            "icon"
          ]
        },
        {
          "value": [
            "description"
          ]
        }
      ],
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "icon",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Feature element with an icon, title and description. Icon element contains controls for various background shapes.",
      "assetsLibrary": [
        "animate"
      ],
      "icon": {
        "designOptions": {},
        "size": "small",
        "shape": "filled-circle",
        "shapeColor": "rgb(0, 175, 236)",
        "relatedTo": [
          "General"
        ],
        "customClass": "",
        "iconPicker": {
          "icon": "typcn typcn-credit-card",
          "iconSet": "typicons"
        },
        "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/thumbnail-icon.jpg",
        "parent": false,
        "iconAlignment": "center",
        "editFormTab1": [
          "iconPicker",
          "iconColor",
          "iconUrl",
          "size",
          "shape",
          "shapeColor",
          "iconAlignment",
          "toggleCustomHover",
          "iconColorHover",
          "shapeColorHover",
          "metaCustomId",
          "customClass"
        ],
        "iconColor": "#fff",
        "name": "Icon",
        "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/preview-icon.jpg",
        "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/public/dist/element.bundle.js",
        "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/public/",
        "metaBackendLabels": [
          {
            "value": [
              "iconPicker",
              "iconUrl",
              "shape",
              "shapeColor"
            ],
            "options": {
              "onChange": [
                {
                  "rule": {
                    "attribute": "shape",
                    "value": "none"
                  },
                  "dependency": "shapeColor",
                  "action": "toggle"
                }
              ]
            }
          }
        ],
        "metaEditFormTabs": [
          "editFormTab1",
          "designOptions"
        ],
        "metaCustomId": "",
        "iconColorHover": "#fff",
        "iconUrl": {
          "url": "",
          "title": "",
          "targetBlank": false,
          "relNofollow": false
        },
        "toggleCustomHover": false,
        "metaDescription": "Simple icon element with various icons from library and background shape control options.",
        "assetsLibrary": [
          "iconpicker",
          "animate"
        ],
        "shapeColorHover": "#3cb878",
        "tag": "icon",
        "id": "c82f6b13",
        "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/icon/icon/"
      },
      "tag": "feature",
      "id": "620ab001",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/feature/feature/",
      "description": "<p>Over the years, credit cards have become one of the most common forms of payment for e-commerce transactions.</p>"
    },
    "d1a87a8f": {
      "tag": "column",
      "parent": "5fd03065",
      "size": "49.99%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "d1a87a8f",
      "order": 1
    },
    "c82ce49b": {
      "tag": "column",
      "parent": "e68a87fa",
      "size": "16.66%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "c82ce49b",
      "order": 2
    },
    "b2694a42": {
      "tag": "column",
      "parent": "251daae2",
      "size": "50%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "b2694a42",
      "order": 1
    },
    "8df2627a": {
      "tag": "column",
      "parent": "e68a87fa",
      "size": "16.66%",
      "lastInRow": false,
      "firstInRow": false,
      "id": "8df2627a",
      "order": 1
    },
    "bcef6b4e": {
      "designOptions": {},
      "size": "full",
      "shape": "square",
      "alignment": "center",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/thumbnail-single-image.png",
      "metaOrder": 3,
      "parent": "d12702cc",
      "editFormTab1": [
        "clickableOptions",
        "image",
        "shape",
        "size",
        "alignment",
        "metaCustomId",
        "customClass"
      ],
      "name": "Single Image",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/preview-single-image.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/public/",
      "metaBackendLabels": [
        {
          "value": [
            "clickableOptions"
          ]
        },
        {
          "value": [
            "image"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Single image is a basic element for adding images from Media Library into the content area. Single image element includes controls for image manipulations.",
      "metaPublicJs": [
        "public/js/lib/jquery.zoom.js",
        "public/js/lib/lightbox.js",
        "public/js/singleImage.js"
      ],
      "assetsLibrary": [
        "animate"
      ],
      "tag": "singleImage",
      "id": "bcef6b4e",
      "image": {
        "ids": [
          718
        ],
        "urls": [
          {
            "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Application-02-150x150.png",
            "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Application-02-186x300.png",
            "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/Application-02.png",
            "id": 718,
            "title": "Application Screen Secondary",
            "alt": "",
            "link": {
              "relNofollow": false,
              "targetBlank": true,
              "title": "",
              "url": ""
            }
          }
        ]
      },
      "clickableOptions": "",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/singleImage/singleImage/"
    },
    "a124768f": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "paddingTop": "50px",
              "paddingBottom": "50px"
            },
            "backgroundColor": "rgb(240, 207, 213)"
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "50px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          },
          "backgroundColorMixin:all": {
            "src": "@if $backgroundColor != false {\n  #$selector[data-vce-do-apply*=\"all\"],\n  #$selector [data-vce-do-apply*=\"all\"],\n  #$selector[data-vce-do-apply*=\"background\"],\n  #$selector [data-vce-do-apply*=\"background\"] {\n    &[data-vce-do-apply*=\"$selector\"] {\n      @media (--$(device)-only) {\n        background-color: $backgroundColor;\n      }\n    }\n  }\n}",
            "variables": {
              "device": {
                "value": "all"
              },
              "backgroundColor": {
                "value": "rgb(240, 207, 213)"
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "stretchedRow",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 10,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "a124768f",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    }
  }
}