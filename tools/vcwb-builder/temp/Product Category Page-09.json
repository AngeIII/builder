{
  "id": "TP11000009",
  "title": "Product Category Page",
  "description": "The layout to represent your products or categories with rich background images in an asynchronous grid.",
  "template": {
    "d5bc9d15": {
      "columnGap": "0",
      "size": "auto",
      "contentPosition": "bottom",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": true,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "d5bc9d15",
      "equalHeight": true,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "e65e1320": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "ac7b4c73",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 4,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "e65e1320",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Shop Now - $38"
    },
    "158e333d": {
      "columnGap": "0",
      "size": "auto",
      "contentPosition": "bottom",
      "designOptionsAdvanced": {},
      "columnBackground": {},
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": "eb671bc3",
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "158e333d",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "a104ac2b": {
      "tag": "column",
      "parent": "72a031ad",
      "size": "40%",
      "lastInRow": false,
      "firstInRow": true,
      "id": "a104ac2b",
      "order": 0
    },
    "b2e50667": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "9d5bbd5e",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 3,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "b2e50667",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Shop Now - $60"
    },
    "deb8388d": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px",
              "paddingTop": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h3><span style=\"color: #ffffff;\">Pack your stuff</span></h3>\n<p><span style=\"color: #ffffff;\">Backpacks are commonly used by hikers and students</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "104af2ce",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "deb8388d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "98ebfe5d": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px",
              "paddingTop": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h3><span style=\"color: #ffffff;\">Let me shine</span></h3>\n<p><span style=\"color: #ffffff;\">A lamp is the light source, which is typically called the light bulb</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "c73fbf04",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "98ebfe5d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "9d5bbd5e": {
      "size": "60%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingRight": "150px",
              "paddingLeft": "50px"
            },
            "backgroundType": "imagesSimple",
            "backgroundStyle": "cover",
            "images": {
              "ids": [
                944
              ],
              "urls": [
                {
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/vase-150x150.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/vase-300x300.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/vase.jpg",
                  "medium_large": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/vase-768x768.jpg",
                  "id": 944,
                  "title": "vase",
                  "alt": "",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  }
                }
              ]
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "150px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "50px"
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "firstInRow": false,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "72a031ad",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "9d5bbd5e",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "72a031ad": {
      "columnGap": "0",
      "size": "auto",
      "contentPosition": "bottom",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "columnBackground": {
        "all": true
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": true,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "72a031ad",
      "equalHeight": true,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "409536e6": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "f3460ab4",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 3,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "409536e6",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Shop Now - $80"
    },
    "d82b90a4": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px",
              "paddingTop": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h3><span style=\"color: #ffffff;\">Take a seat</span></h3>\n<p><span style=\"color: #ffffff;\">A chair is a piece of furniture with a raised surface supported by legs</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "fe85afeb",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "d82b90a4",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "e9d7c5a6": {
      "columnGap": "30",
      "size": "auto",
      "contentPosition": "top",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingTop": "50px",
              "paddingBottom": "50"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "50px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": "50px"
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "columnBackground": "",
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": false,
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {},
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "order": 3,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "e9d7c5a6",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "fce58417": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px",
              "paddingTop": "100px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": "100px"
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h3><span style=\"color: #ffffff;\">Hold My Drink</span></h3>\n<p><span style=\"color: #ffffff;\">A bottle is a rigid container with a neck that is narrower</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "ac7b4c73",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "fce58417",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "c73fbf04": {
      "size": "100%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingRight": "50px",
              "paddingLeft": "50px"
            },
            "backgroundType": "imagesSimple",
            "backgroundStyle": "cover",
            "images": {
              "ids": [
                947
              ],
              "urls": [
                {
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/lamp-150x150.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/lamp-300x300.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/lamp.jpg",
                  "id": 947,
                  "title": "lamp",
                  "alt": "",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  }
                }
              ]
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "50px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "50px"
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "9027fe86",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "c73fbf04",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "160dc7af": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "104af2ce",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "160dc7af",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Shop Now - $99"
    },
    "f3460ab4": {
      "size": "60%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingRight": "150px",
              "paddingLeft": "50px"
            },
            "backgroundType": "imagesSimple",
            "backgroundStyle": "cover",
            "images": {
              "ids": [
                912
              ],
              "urls": [
                {
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/shoes-150x150.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/shoes-300x300.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/shoes.jpg",
                  "medium_large": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/shoes-768x768.jpg",
                  "id": 912,
                  "title": "Shoes Product",
                  "alt": "",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  }
                }
              ],
              "draggingIndex": null
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "150px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "50px"
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "d5bc9d15",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "f3460ab4",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": false
    },
    "25821f12": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h2><font color=\"#ffffff\">What is in the vase</font></h2>\n<p><span style=\"color: #ffffff;\">Vases generally have a similar shape. The foot or the base may be bulbous, flat, carinate, or another shape</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "9d5bbd5e",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "25821f12",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "9eff3a97": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "fe85afeb",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 4,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "9eff3a97",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Shop Now - $300"
    },
    "ac7b4c73": {
      "size": "100%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px",
              "paddingRight": "100px",
              "paddingLeft": "50px"
            },
            "backgroundType": "imagesSimple",
            "backgroundStyle": "cover",
            "images": {
              "ids": [
                940
              ],
              "urls": [
                {
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/bottle-150x150.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/bottle-300x300.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/bottle.jpg",
                  "id": 940,
                  "title": "bottle",
                  "alt": "",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  }
                }
              ]
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "100px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "50px"
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "9027fe86",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "ac7b4c73",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "b8ad2452": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "center",
      "color": "rgb(218, 218, 218)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "27321a16",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(218, 218, 218)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "b8ad2452",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "View All Products"
    },
    "9027fe86": {
      "columnGap": "0",
      "size": "auto",
      "contentPosition": "bottom",
      "designOptionsAdvanced": {},
      "columnBackground": {
        "all": true
      },
      "relatedTo": [
        "General",
        "RootElements"
      ],
      "customClass": "",
      "containerFor": [
        "Column"
      ],
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/thumbnail-row-column.png",
      "metaOrder": 1,
      "parent": "a104ac2b",
      "editFormTab1": [
        "rowWidth",
        "removeSpaces",
        "columnGap",
        "fullHeight",
        "columnPosition",
        "equalHeight",
        "contentPosition",
        "metaCustomId",
        "customClass"
      ],
      "layout": {
        "reverseColumn": false
      },
      "name": "Row",
      "rowWidth": "boxed",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/preview-row-column.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/public/",
      "background": "",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "layout",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "removeSpaces": false,
      "fullHeight": false,
      "metaDescription": "Row and Column are the basic structural element for building an initial content structure by adding rows and dividing them into columns. You can insert other content elements into columns.",
      "metaPublicJs": [
        "public/js/lib/fullHeightRow.js",
        "public/js/lib/fullWidthRow.js",
        "public/js/row.js"
      ],
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "row",
      "id": "9027fe86",
      "equalHeight": false,
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/row/row/",
      "columnPosition": "top"
    },
    "27321a16": {
      "size": "100%",
      "designOptionsAdvanced": {},
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "e9d7c5a6",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "27321a16",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "f3012728": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "50px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "50px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "shape": "square",
      "alignment": "left",
      "color": "rgb(255, 255, 255)",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-thumbnail.png",
      "parent": "c73fbf04",
      "editFormTab1": [
        "buttonText",
        "buttonUrl",
        "alignment",
        "shape",
        "buttonType",
        "color",
        "borderColor",
        "hoverColorOutline",
        "hoverColorAnimated",
        "hoverBackgroundBorder",
        "metaCustomId",
        "customClass"
      ],
      "hoverColorAnimated": "#fff",
      "name": "Outline Button",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/outline-button-preview.jpg",
      "buttonType": "outline-animated-slidein",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/public/",
      "metaBackendLabels": [
        {
          "value": [
            "buttonText",
            "buttonUrl",
            "shape",
            "borderColor"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "groups": "Buttons",
      "hoverBackgroundBorder": "rgb(47, 47, 47)",
      "metaDescription": "Simple outline button with solid fill on hover. Great solution to be used as a secondary button within a website.",
      "borderColor": "rgb(255, 255, 255)",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "outlineButton",
      "id": "f3012728",
      "hoverColorOutline": "#3d3d3d",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/outlineButton/outlineButton/",
      "buttonUrl": {
        "url": "",
        "title": "",
        "targetBlank": false,
        "relNofollow": false
      },
      "buttonText": "Shop Now - $233"
    },
    "104af2ce": {
      "size": "100%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "paddingRight": "50px",
              "paddingLeft": "50px"
            },
            "backgroundType": "imagesSimple",
            "backgroundStyle": "cover",
            "images": {
              "ids": [
                928
              ],
              "urls": [
                {
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/backpack-150x150.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/backpack-300x300.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/backpack.jpg",
                  "id": 928,
                  "title": "backpack",
                  "alt": "",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  }
                }
              ]
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "50px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "50px"
              },
              "marginBottom": {
                "value": false
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "158e333d",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 1,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "104af2ce",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "22b59c42": {
      "designOptions": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px"
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}\n",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": false
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": false
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "output": "<h2><span style=\"color: #ffffff;\">We all have a story</span></h2>\n<p><span style=\"color: #ffffff;\">&nbsp;A shoe is an item of footwear intended to protect and comfort the human foot while the wearer is doing various activities</span></p>",
      "relatedTo": [
        "General"
      ],
      "customClass": "",
      "metaThumbnailUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/thumbnail-text-block.png",
      "metaOrder": 2,
      "parent": "f3460ab4",
      "editFormTab1": [
        "output",
        "outputInline",
        "metaCustomId",
        "customClass"
      ],
      "name": "Text Block",
      "metaPreviewUrl": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public/preview-text-block.jpg",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/public",
      "metaBackendLabels": [
        {
          "value": [
            "output"
          ]
        }
      ],
      "order": 2,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptions"
      ],
      "metaCustomId": "",
      "metaDescription": "Simple text editor for working with static text, including paragraphs, titles, bullets and even media. Simple text block is a copy of default WordPress editor.",
      "assetsLibrary": [
        "animate"
      ],
      "tag": "textBlock",
      "id": "22b59c42",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/textBlock/textBlock/"
    },
    "fe85afeb": {
      "size": "100%",
      "designOptionsAdvanced": {
        "device": {
          "all": {
            "boxModel": {
              "combined": false,
              "marginBottom": "0px",
              "paddingRight": "100px",
              "paddingLeft": "50px"
            },
            "backgroundType": "imagesSimple",
            "backgroundStyle": "cover",
            "images": {
              "ids": [
                924
              ],
              "urls": [
                {
                  "thumbnail": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/chair-150x150.jpg",
                  "medium": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/chair-300x300.jpg",
                  "full": "http://test.alpha.visualcomposer.io/wp-content/uploads/2017/05/chair.jpg",
                  "id": 924,
                  "title": "chair",
                  "alt": "",
                  "link": {
                    "relNofollow": false,
                    "targetBlank": true,
                    "title": "",
                    "url": ""
                  }
                }
              ],
              "draggingIndex": null
            }
          }
        },
        "attributeMixins": {
          "boxModelMixin:all": {
            "src": "#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"border\"],\n#$selector [data-vce-do-apply*=\"border\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $borderWidth != false {\n        border-width: $borderWidth;\n      }\n\n      @if $borderRadius != false {\n        border-radius: $borderRadius;\n      }\n\n      @if $borderBottomLeftRadius != false {\n        border-bottom-left-radius: $borderBottomLeftRadius;\n      }\n\n      @if $borderBottomRightRadius != false {\n        border-bottom-right-radius: $borderBottomRightRadius;\n      }\n\n      @if $borderBottomWidth != false {\n        border-bottom-width: $borderBottomWidth;\n      }\n\n      @if $borderLeftWidth != false {\n        border-left-width: $borderLeftWidth;\n      }\n\n      @if $borderRightWidth != false {\n        border-right-width: $borderRightWidth;\n      }\n\n      @if $borderTopLeftRadius != false {\n        border-top-left-radius: $borderTopLeftRadius;\n      }\n\n      @if $borderTopRightRadius != false {\n        border-top-right-radius: $borderTopRightRadius;\n      }\n\n      @if $borderTopWidth != false {\n        border-top-width: $borderTopWidth;\n      }\n\n      @if $borderStyle != false {\n        border-style: $borderStyle;\n      }\n\n      @if $borderTopStyle != false {\n        border-top-style: $borderTopStyle;\n      }\n\n      @if $borderRightStyle != false {\n        border-right-style: $borderRightStyle;\n      }\n\n      @if $borderBottomStyle != false {\n        border-bottom-style: $borderBottomStyle;\n      }\n\n      @if $borderLeftStyle != false {\n        border-left-style: $borderLeftStyle;\n      }\n\n      @if $borderColor != false {\n        border-color: $borderColor;\n      }\n\n      @if $borderTopColor != false {\n        border-top-color: $borderTopColor;\n      }\n\n      @if $borderRightColor != false {\n        border-right-color: $borderRightColor;\n      }\n\n      @if $borderBottomColor != false {\n        border-bottom-color: $borderBottomColor;\n      }\n\n      @if $borderLeftColor != false {\n        border-left-color: $borderLeftColor;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"margin\"],\n#$selector [data-vce-do-apply*=\"margin\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $margin != false {\n        margin: $margin;\n      }\n\n      @if $marginBottom != false {\n        margin-bottom: $marginBottom;\n      }\n\n      @if $marginLeft != false {\n        margin-left: $marginLeft;\n      }\n\n      @if $marginRight != false {\n        margin-right: $marginRight;\n      }\n\n      @if $marginTop != false {\n        margin-top: $marginTop;\n      }\n    }\n  }\n}\n\n#$selector[data-vce-do-apply*=\"all\"],\n#$selector [data-vce-do-apply*=\"all\"],\n#$selector[data-vce-do-apply*=\"padding\"],\n#$selector [data-vce-do-apply*=\"padding\"] {\n  &[data-vce-do-apply*=\"$selector\"] {\n    @media (--$(device)-only) {\n      @if $padding != false {\n        padding: $padding;\n      }\n\n      @if $paddingBottom != false {\n        padding-bottom: $paddingBottom;\n      }\n\n      @if $paddingLeft != false {\n        padding-left: $paddingLeft;\n      }\n\n      @if $paddingRight != false {\n        padding-right: $paddingRight;\n      }\n\n      @if $paddingTop != false {\n        padding-top: $paddingTop;\n      }\n    }\n  }\n}",
            "variables": {
              "borderRightStyle": {
                "value": false
              },
              "borderTopLeftRadius": {
                "value": false
              },
              "paddingTop": {
                "value": false
              },
              "borderTopRightRadius": {
                "value": false
              },
              "borderStyle": {
                "value": false
              },
              "combined": {
                "value": false
              },
              "marginTop": {
                "value": false
              },
              "borderTopStyle": {
                "value": false
              },
              "paddingRight": {
                "value": "100px"
              },
              "borderBottomColor": {
                "value": false
              },
              "marginRight": {
                "value": false
              },
              "margin": {
                "value": false
              },
              "borderBottomWidth": {
                "value": false
              },
              "borderBottomLeftRadius": {
                "value": false
              },
              "borderLeftColor": {
                "value": false
              },
              "padding": {
                "value": false
              },
              "borderLeftWidth": {
                "value": false
              },
              "borderRightColor": {
                "value": false
              },
              "marginLeft": {
                "value": false
              },
              "device": {
                "value": "all"
              },
              "borderRightWidth": {
                "value": false
              },
              "borderColor": {
                "value": false
              },
              "borderBottomRightRadius": {
                "value": false
              },
              "paddingLeft": {
                "value": "50px"
              },
              "marginBottom": {
                "value": "0px"
              },
              "borderWidth": {
                "value": false
              },
              "borderBottomStyle": {
                "value": false
              },
              "borderTopColor": {
                "value": false
              },
              "paddingBottom": {
                "value": false
              },
              "borderTopWidth": {
                "value": false
              },
              "borderLeftStyle": {
                "value": false
              },
              "borderRadius": {
                "value": false
              }
            }
          }
        }
      },
      "firstInRow": true,
      "relatedTo": [
        "Column"
      ],
      "customClass": "",
      "containerFor": [
        "General"
      ],
      "metaThumbnailUrl": "",
      "parent": "158e333d",
      "editFormTab1": [
        "metaCustomId",
        "customClass"
      ],
      "name": "Column",
      "metaPreviewUrl": "",
      "metaBundlePath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/public/dist/element.bundle.js",
      "metaAssetsPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/public/",
      "order": 0,
      "metaEditFormTabs": [
        "editFormTab1",
        "designOptionsAdvanced"
      ],
      "metaCustomId": "",
      "metaDescription": "",
      "assetsLibrary": [
        "animate",
        "backgroundSlider",
        "backgroundSimple",
        "backgroundColorGradient",
        "backgroundVideoYoutube",
        "backgroundVideoVimeo",
        "backgroundVideoEmbed",
        "parallaxFade",
        "parallaxBackground"
      ],
      "backendView": "frontend",
      "tag": "column",
      "id": "fe85afeb",
      "metaElementPath": "http://test.alpha.visualcomposer.io/wp-content/plugins/vcwb/devElements/column/column/",
      "lastInRow": true
    },
    "eb671bc3": {
      "tag": "column",
      "parent": "d5bc9d15",
      "size": "40%",
      "lastInRow": true,
      "firstInRow": false,
      "id": "eb671bc3",
      "order": 1
    }
  }
}